<plugin
 name="Ads"
 description="Generic Ads interface">
 <property name="gmsVersion" type="string" title="Google Play Services version" description="" default="16.0.0" />
 <property name="gmsAppId" type="string" title="Application Id" description="Application Id for Google Play Services" default="" />
 <!--
 <property name="adsFwAdcolony" type="boolean" title="Enable Adcolony support (Android,iOS)"/>
 -->
 <property name="adsFwAdmob" type="boolean" title="Enable Admob support (Android, iOS, require Gaming/Google Play)"/>
 <property name="adsFwAdmobClient" type="string" title="Admob client key (ca-app-pub-xxx)"/>
 <property name="adsFwAdmobBanner" type="string" title="Admob banner key"/>
 <property name="adsFwAdmobInterstitial" type="string" title="Admob interstitial key"/>
 <!--
 <property name="adsFwAmazon" type="boolean" title="Enable Amazon support (Android,iOS)"/>
 -->
 <property name="adsFwApplovin" type="boolean" title="Enable AppLovin support (Android, iOS, Gaming/Google Play)"/>
 <property name="adsFwApplovinKey" type="string" title="AppLovin SDK key (Android, iOS)"/>
 <property name="adsFwChartboost" type="boolean" title="Enable Chartboost support (Android, iOS, Gaming/Google Play)"/>
 <!--
 <property name="adsFwHeyzap" type="boolean" title="Enable Heyzap support (Android,iOS)"/>
 <property name="adsFwIad" type="boolean" title="Enable iAd support (iOS)"/>
 <property name="adsFwInmobi" type="boolean" title="Enable Inmobi support (Android,iOS)"/>
 -->
 <property name="adsFwKiip" type="boolean" title="Enable Kiip support (Android,iOS)"/>
<property name="adsFwKiipKey" type="string" title="Kiip Key Android" description="Kiip key for your application" default="" />
<property name="adsFwKiipKeyIos" type="string" title="Kiip Key iOS" description="Kiip key for your application" default="" />
 <!--
 <property name="adsFwMillenial" type="boolean" title="Enable Millenial support (Android)"/>
 <property name="adsFwMopub" type="boolean" title="Enable Mopub support (Android,iOS)"/>
 <property name="adsFwRevmob" type="boolean" title="Enable Revmob support (Android,iOS)"/>
 <property name="adsFwSamsung" type="boolean" title="Enable Samsung support (Android,iOS)"/>
 <property name="adsFwTapfortap" type="boolean" title="Enable Tapfortap support (Android,iOS)"/>
 <property name="adsFwTapjoy" type="boolean" title="Enable Tapjoy support (Android)"/> 
 -->
 <property name="adsFwUnity" type="boolean" title="Enable Unity Ads support (Android,iOS)"/>
 <property name="adsFwVungle" type="boolean" title="Enable Vungle support (Android,iOS)"/>
 
  <target name="AndroidStudio,APK">
    <template name="sources" path="[[[sys.pluginDir]]]/bin/Android/src" dest="app/src/main/java" exclude="frameworks"/>
    <template name="binaries" path="[[[sys.pluginDir]]]/bin/Android/libs" dest="app/src/main/jniLibs" include="libads*.so" />
    <template name="Activity" path="">
        <replacelist wildcards="[[[project.namews]]]Activity.java">
            <append orig="//GIDEROS-STATIC-INIT//" by="		System.loadLibrary(&quot;ads&quot;);"/>
            <append orig="//GIDEROS-EXTERNAL-CLASS//" by="		&quot;com.giderosmobile.android.plugins.ads.Ads&quot;,"/>
        </replacelist>
    </template>
    <set key="local.adsfwd" value="app/src/main/java/com/giderosmobile/android/plugins/ads/frameworks"/>
    <set key="local.adsfws" value="[[[sys.pluginDir]]]/bin/Android/src/com/giderosmobile/android/plugins/ads/frameworks"/>
    <mkdir>[[[local.adsfwd]]]</mkdir>
    <set key="local.adsReqGms" value="0"/>
    <if condition="[[[plugin.adsFwApplovin]]]">
	    <set key="local.adsReqGms" value="1"/>
    </if>
    <if condition="[[[plugin.adsFwChartboost]]]">
	    <set key="local.adsReqGms" value="1"/>
    </if>
    <if condition="[[[plugin.adsFwAdmob]]]">
	    <set key="local.adsReqGms" value="1"/>
    </if>
    <if condition="[[[local.adsReqGms]]]">
 	<template name="GMS" path="[[[sys.pluginDir]]]/bin/Android/res" dest="app/src/main/res/">
		<replacelist wildcards="ids.xml">
			<replace orig="561448401579" by="[[[plugin.gmsAppId]]]"/>
       	</replacelist>		
 	</template>
   	<template name="AndroidManifest" path="">
        	<replacelist wildcards="AndroidManifest.xml">
            	<append>
            		<orig><![CDATA[<!-- TAG:APPLICATION-EXTRA -->]]></orig>
            		<by><![CDATA[
<meta-data android:name="com.google.android.gms.games.APP_ID" android:value="@string/app_id" />
<meta-data android:name="com.google.android.gms.version"  android:value="@integer/google_play_services_version" />]]></by> 
    	        </append>
	       	</replacelist>	
 	</template>	 	
 	</if>
    <if condition="[[[plugin.adsFwUnity]]]">
    	<template name="Unity Ads" path="[[[local.adsfws]]]" dest="[[[local.adsfwd]]]" include="AdsUnity.java" />
    	<set key="local.adsAarVer" value="3.0.0" />
    	<set key="local.adsJarVer" value="unity-ads-[[[local.adsAarVer]]].aar" />
    	<download source="http://apps.giderosmobile.com/ext/android/[[[local.adsJarVer]]]" dest="[[[sys.cacheDir]]]/[[[local.adsJarVer]]]" />
    	<cp src="[[[sys.cacheDir]]]/[[[local.adsJarVer]]]" dst="app/libs/[[[local.adsJarVer]]]" />
    	<template name="Unity Ads AAR" path="app" dest="app">
			<replacelist wildcards="build.gradle">
				<append>
					<orig>//TAG-DEPENDENCIES//</orig>								
					<by>
				    implementation 'com.unity3d.ads:unity:ads:[[[local.adsAarVer]]]@aar'
					</by>
				</append>
	       	</replacelist>	
	 	</template>
	</if>  
    <if condition="[[[plugin.adsFwVungle]]]">
    	<template name="Binaries" path="[[[local.adsfws]]]" dest="[[[local.adsfwd]]]" include="AdsVungle.java" />
    	<template name="Binaries" path="" dest="">
			<replacelist wildcards="build.gradle;AndroidManfiest.xml">
				<append>
					<orig>//TAG-DEPENDENCIES//</orig>								
					<by>
					implementation 'com.github.vungle:vungle-android-sdk:5.1.0'
					</by>
				</append>
				<append>
					<orig>//TAG-TOP-GRADLE-ALLREPOS//</orig>								
					<by>
					maven { url 'https://jitpack.io' }</by>
				</append>
				<append>
            		<orig><![CDATA[<!-- TAG:APPLICATION-EXTRA -->]]></orig>
            		<by><![CDATA[
	<activity android:name="com.vungle.publisher.VideoFullScreenAdActivity"
     android:configChanges="keyboardHidden|orientation|screenSize|screenLayout|smallestScreenSize"
     android:theme="@android:style/Theme.NoTitleBar.Fullscreen"/>

    <activity android:name="com.vungle.publisher.MraidFullScreenAdActivity"
     android:configChanges="keyboardHidden|orientation|screenSize|screenLayout|smallestScreenSize"
     android:theme="@android:style/Theme.Translucent.NoTitleBar.Fullscreen"/>

    <activity android:name="com.vungle.publisher.FlexViewAdActivity"
     android:configChanges="keyboardHidden|orientation|screenSize|screenLayout|smallestScreenSize"
     android:theme="@android:style/Theme.Translucent.NoTitleBar.Fullscreen"/>]]></by>    	        
    	        </append>
	       	</replacelist>	
	 	</template>
	    <lua>
    	local ap=require("Tools/export_android")
    	ap.minSdk(11)
    	ap.usePermission("android.permission.ACCESS_NETWORK_STATE")
    	ap.usePermission("android.permission.WRITE_EXTERNAL_STORAGE",18)
    	</lua>
	</if>  
    <if condition="[[[plugin.adsFwKiip]]]">
    	<template name="Kiip" path="[[[local.adsfws]]]" dest="[[[local.adsfwd]]]" include="AdsKiip.java">
         <replacelist wildcards="AdsKiip.java">
            <replace orig="GIDEROS_KIIP_APP_KEY" by="[[[plugin.adsFwKiipKey]]]"/>
         </replacelist>
    	</template>
    	<set key="local.adsVer" value="2.3.1" />
    	<set key="local.adsJarVer" value="Kiip-Android-SDK-v[[[local.adsVer]]].zip" />
    	<download source="http://apps.giderosmobile.com/ext/android/[[[local.adsJarVer]]]" dest="[[[sys.cacheDir]]]/[[[local.adsJarVer]]]" />
    	<mkdir>_tmpKiip</mkdir>
    	<cd>_tmpKiip</cd>
    	<unzip source="[[[sys.cacheDir]]]/[[[local.adsJarVer]]]" dest="" />
    	<cd>..</cd>
    	<template name="Kiip" path="_tmpKiip/KiipSDK/src/main/res" dest="app/src/main/res" />
    	<cp src="_tmpKiip/KiipSDK/libs/KiipSDK.jar" dst="app/libs/KiipSDK.jar" />
    	<rmdir>_tmpKiip</rmdir>
   		<template name="Activity" path="">
         <replacelist wildcards="[[[project.namews]]]Activity.java">
            <append orig="//GIDEROS-ACTIVITY-IMPORT//" by="&#10;import android.support.v4.app.FragmentActivity;"/>
            <replace orig="[[[project.namews]]]Activity extends Activity" by="[[[project.namews]]]Activity extends FragmentActivity"/>
         </replacelist>
    	</template>
    	<template name="Kiip" path="app" dest="app">
			<replacelist wildcards="AndroidManifest.xml;build.gradle">
				<append>
					<orig>//TAG-DEPENDENCIES//</orig>								
					<by>
    implementation 'com.android.support:support-v4:[[[export.androidSdk]]]+'
    implementation files('libs/KiipSDK.jar')
					</by>
				</append>
            	<append>
            		<orig><![CDATA[<!-- TAG:APPLICATION-EXTRA -->]]></orig>
            		<by><![CDATA[
        <meta-data android:name="me.kiip.sdk.AppKey" android:value="[[[plugin.adsFwKiipKey]]]"/>
        <provider android:name="me.kiip.sdk.KiipSDKProvider"
            android:authorities="me.kiip.sdk.KiipSDKProvider[[[plugin.adsFwKiipKey]]]"
            android:exported="true" />]]></by>    	        
    	        </append>
	       	</replacelist>	
	 	</template>
    <lua>
    local ap=require("Tools/export_android")
    ap.usePermission("android.permission.ACCESS_NETWORK_STATE")
    </lua>
	</if>  
    <if condition="[[[plugin.adsFwApplovin]]]">
    	<template name="AppLovin" path="[[[local.adsfws]]]" dest="[[[local.adsfwd]]]" include="AdsApplovin.java" />
    	<set key="local.adsAarVer" value="9.6.0" />
    	<set key="local.adsJarVer" value="applovin-sdk-[[[local.adsAarVer]]].aar" />
    	<download source="http://apps.giderosmobile.com/ext/android/[[[local.adsJarVer]]]" dest="[[[sys.cacheDir]]]/[[[local.adsJarVer]]]" />
    	<cp src="[[[sys.cacheDir]]]/[[[local.adsJarVer]]]" dst="app/libs/[[[local.adsJarVer]]]" />
    	<template name="AndroidManifest" path="">
        	<replacelist wildcards="AndroidManifest.xml;build.gradle">
            	<append>
            		<orig><![CDATA[<!-- TAG:APPLICATION-EXTRA -->]]></orig>
            		<by><![CDATA[
<meta-data android:name="applovin.sdk.key" android:value="[[[plugin.adsFwApplovinKey]]]"  />
<activity android:name="com.applovin.adview.AppLovinInterstitialActivity" android:configChanges="orientation|screenSize" />
<activity android:name="com.applovin.adview.AppLovinConfirmationActivity" android:configChanges="orientation|screenSize" />]]></by>
    	        </append>
				<append>
					<orig>//TAG-DEPENDENCIES//</orig>								
					<by>
				    implementation files('libs/[[[local.adsJarVer]]]')
		            implementation 'com.google.android.gms:play-services-ads:[[[plugin.gmsVersion]]]'
					</by>
				</append>
        	</replacelist>
    	</template>
	    <lua>
    	local ap=require("Tools/export_android")
    	ap.minSdk(16)
    	</lua>
    <lua>
	
    local ap=require("Tools/export_android")
    ap.usePermission("android.permission.ACCESS_NETWORK_STATE")
    ap.usePermission("android.permission.WRITE_EXTERNAL_STORAGE",18)
    </lua>
    </if>	  
    <if condition="[[[plugin.adsFwChartboost]]]">
    	<template name="ChartBoost" path="[[[local.adsfws]]]" dest="[[[local.adsfwd]]]" include="AdsChartboost.java" />
    	<set key="local.adsJarVer" value="chartboost-sdk-7.2.0.jar" />
    	<download source="http://apps.giderosmobile.com/ext/android/[[[local.adsJarVer]]]" dest="[[[sys.cacheDir]]]/[[[local.adsJarVer]]]" />
    	<cp src="[[[sys.cacheDir]]]/[[[local.adsJarVer]]]" dst="app/libs/[[[local.adsJarVer]]]" />
	    <!-- <template name="binaries" path="[[[sys.pluginDir]]]/source/Android/libs" dest="app/libs" include="chartboos*.jar" /> -->
    	<template name="AndroidManifest" path="">
        	<replacelist wildcards="AndroidManifest.xml;build.gradle">
            	<append>
            		<orig><![CDATA[<!-- TAG:APPLICATION-EXTRA -->]]></orig>
            		<by><![CDATA[
<activity android:name="com.chartboost.sdk.CBImpressionActivity"
               android:excludeFromRecents="true"
               android:hardwareAccelerated="true"
               android:theme="@android:style/Theme.Translucent.NoTitleBar.Fullscreen"
               android:configChanges="keyboardHidden|orientation|screenSize" />]]></by>
    	        </append>
				<append>
					<orig>//TAG-DEPENDENCIES//</orig>								
					<by>
				    implementation files('libs/[[[local.adsJarVer]]]')
		            implementation 'com.google.android.gms:play-services-ads:[[[plugin.gmsVersion]]]'
					</by>
				</append>
        	</replacelist>
    	</template>
    <lua>
    local ap=require("Tools/export_android")
    ap.usePermission("android.permission.ACCESS_NETWORK_STATE")
    </lua>
    </if>	  
    <if condition="[[[plugin.adsFwAdmob]]]">
    	<template name="AdMob" path="[[[local.adsfws]]]" dest="[[[local.adsfwd]]]" include="AdsAdmob.java" />
    	<template name="AndroidManifest" path="">
        	<replacelist wildcards="AndroidManifest.xml;build.gradle;strings.xml">
            	<append>
            		<orig><![CDATA[<!-- TAG:APPLICATION-EXTRA -->]]></orig>
            		<by><![CDATA[
       <meta-data
            android:name="com.google.android.gms.ads.APPLICATION_ID"
            android:value="[[[plugin.adsFwAdmobClient]]]"/>            		
	   <activity
            android:name="com.google.android.gms.ads.AdActivity"
            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize"
            android:theme="@android:style/Theme.Translucent" />]]></by>
    	        </append>
				<append>
					<orig>//TAG-DEPENDENCIES//</orig>								
					<by>
		            implementation 'com.google.android.gms:play-services-ads:[[[plugin.gmsVersion]]]'
					</by>
				</append>
            	<prepend>
            		<orig><![CDATA[</resources>]]></orig>
            		<by><![CDATA[    <!-- AdMob ad unit IDs -->
    <string name="banner_home_footer">[[[plugin.adsFwAdmobClient]]]/[[[plugin.adsFwAdmobBanner]]]</string>
    <string name="interstitial_full_screen">[[[plugin.adsFwAdmobClient]]]/[[[plugin.adsFwAdmobInterstitial]]]</string>            		
            		]]></by>
    	        </prepend>   
        	</replacelist>
    	</template>
    <lua>
    local ap=require("Tools/export_android")
    ap.usePermission("android.permission.ACCESS_NETWORK_STATE")
    </lua>
    </if>	  
 </target>
 <target name="Android">
    <template name="binares" path="[[[sys.pluginDir]]]/bin/Android" exclude="frameworks"/>
    <template name="Activity" path="">
        <replacelist wildcards="[[[project.namews]]]Activity.java">
            <append orig="//GIDEROS-STATIC-INIT//" by="		System.loadLibrary(&quot;ads&quot;);"/>
            <append orig="//GIDEROS-EXTERNAL-CLASS//" by="		&quot;com.giderosmobile.android.plugins.ads.Ads&quot;,"/>
        </replacelist>
    </template>
    <set key="local.adsfwd" value="src/main/java/com/giderosmobile/android/plugins/ads/frameworks"/>
    <set key="local.adsfws" value="[[[sys.pluginDir]]]/bin/Android/src/com/giderosmobile/android/plugins/ads/frameworks"/>
    <mkdir>[[[local.adsfwd]]]</mkdir>
    <if condition="[[[plugin.adsFwUnity]]]">
    	<template name="Unity Ads" path="[[[local.adsfws]]]" dest="[[[local.adsfwd]]]" include="AdsAdUnity.java" />
	</if>
 </target>

 <target name="iOS">
   <template name="binaries" path="[[[sys.pluginDir]]]/source/iOS/Plugins/" dest="[[[project.name]]]/Plugins/" exclude="frameworks"/>
    <set key="local.adsfwd" value="[[[project.name]]]/Plugins/Ads/frameworks"/>
    <set key="local.adsfws" value="[[[sys.pluginDir]]]/source/iOS/Plugins/Ads/frameworks"/>
    <mkdir>[[[local.adsfwd]]]</mkdir>
	<lua><![CDATA[
local iOSProject=require("Tools/export_ios")
iOSProject.addGroup("Ads","Plugins/Ads","GroupAds_ios","GroupPlugins_ios")
iOSProject.addGroup("frameworks","frameworks","GroupAdsFrameworks_ios","GroupAds_ios")
iOSProject.addGroup("Ads","Plugins/Ads","GroupAds_atv","GroupPlugins_atv")
iOSProject.addGroup("frameworks","frameworks","GroupAdsFrameworks_atv","GroupAds_atv")
iOSProject.addSources({
 "ads.mm","adsbinder.cpp","AdsClass.mm","AdsManager.m","AdsState.m",
 "AdsStateChangeListener.m","Reachability.m",
 "ads.h","AdsClass.h","AdsManager.h","AdsProtocol.h","AdsState.h","AdsStateChangeListener.h","Reachability.h"
},"GroupAds","ios")
iOSProject.addFrameworkPath(Export.getProperty("project.name").."/Plugins/Ads/frameworks")
iOSProject.commit()
	]]></lua>

<if condition="[[[plugin.adsFwApplovin]]]">
	<template name="" path="[[[local.adsfws]]]" dest="[[[local.adsfwd]]]" include="AdsApplovin.*" exclude="*.framework" />
	<download source="http://apps.giderosmobile.com/ext/ios/AppLovinSDK.framework-6.6.1.zip" dest="[[[sys.cacheDir]]]/AppLovinSDK.framework.zip" />
	<unzip source="[[[sys.cacheDir]]]/AppLovinSDK.framework.zip" dest="[[[local.adsfwd]]]" />
   <template name="Project" path="">
        <replacelist wildcards="[[[project.name]]]-Info.plist">
	    	<prepend>
			<orig><![CDATA[<key>CFBundleDisplayName</key>]]></orig>
			<by><![CDATA[	
				<key>AppLovinSdkKey</key>
				<string>[[[plugin.adsFwApplovinKey]]]</string>
			]]></by>
	    </prepend>
        </replacelist>
    </template>	
	<lua><![CDATA[
local iOSProject=require("Tools/export_ios")
iOSProject.needObjCLinking()
iOSProject.addSources({
"AdsApplovin.m","AdsApplovin.h","AppLovinSDK.framework"
},"GroupAdsFrameworks","ios")
local sysFW={ "AdSupport","SystemConfiguration","CoreTelephony","CoreMedia","SafariServices","WebKit" }
for _,v in ipairs(sysFW) do
    iOSProject.addFramework(v..".framework","ios","System/Library/Frameworks/"..v..".framework","$SDKROOT")
end
iOSProject.commit()
	]]></lua>
</if>

<if condition="[[[plugin.adsFwVungle]]]">
	<template name="" path="[[[local.adsfws]]]" dest="[[[local.adsfwd]]]" include="AdsVungle.*" exclude="*.framework" />
	<download source="http://apps.giderosmobile.com/ext/ios/vungle510.zip" dest="[[[sys.cacheDir]]]/vungle.zip" />
	<unzip source="[[[sys.cacheDir]]]/vungle.zip" dest="[[[local.adsfwd]]]" />
	<lua><![CDATA[
local iOSProject=require("Tools/export_ios")
iOSProject.needObjCLinking()
iOSProject.addSources({
"AdsVungle.m","AdsVungle.h","VungleSDK.framework"
},"GroupAdsFrameworks","ios")
local sysFW={ "AdSupport","SystemConfiguration", "CFNetwork", "CoreMedia","WebKit","MediaPlayer" }
for _,v in ipairs(sysFW) do
    iOSProject.addFramework(v..".framework","ios","System/Library/Frameworks/"..v..".framework","$SDKROOT")
end
iOSProject.commit()
	]]></lua>
</if>

<if condition="[[[plugin.adsFwAdmob]]]">
	<template name="" path="[[[local.adsfws]]]" dest="[[[local.adsfwd]]]" include="AdsAdmob.*" exclude="*.framework" />
	<download source="http://apps.giderosmobile.com/ext/ios/GoogleMobileAds.framework-7.21.0.zip" dest="[[[sys.cacheDir]]]/GoogleMobileAds.framework.zip" />
	<unzip source="[[[sys.cacheDir]]]/GoogleMobileAds.framework.zip" dest="[[[local.adsfwd]]]" />
	<lua><![CDATA[
local iOSProject=require("Tools/export_ios")
iOSProject.addSources({
"AdsAdmob.m","AdsAdmob.h","GoogleMobileAds.framework"
},"GroupAdsFrameworks","ios")
iOSProject.commit()
	]]></lua>
</if>

<if condition="[[[plugin.adsFwChartboost]]]">
	<template name="" path="[[[local.adsfws]]]" dest="[[[local.adsfwd]]]" include="AdsChartboost.*" exclude="*.framework" />
	<download source="http://apps.giderosmobile.com/ext/ios/Chartboost.framework-6.6.3.zip" dest="[[[sys.cacheDir]]]/Chartboost.framework.zip" />
	<unzip source="[[[sys.cacheDir]]]/Chartboost.framework.zip" dest="[[[local.adsfwd]]]" />
	<lua><![CDATA[
local iOSProject=require("Tools/export_ios")
iOSProject.addSources({
"AdsChartboost.m","AdsChartboost.h","Chartboost.framework"
},"GroupAdsFrameworks","ios")
iOSProject.commit()
	]]></lua>
</if>

<if condition="[[[plugin.adsFwUnity]]]">
<template name="Unity Ads" path="[[[local.adsfws]]]" dest="[[[local.adsfwd]]]" include="AdsUnity.*" exclude="*.framework" />
<download source="http://apps.giderosmobile.com/ext/ios/UnityAds.framework-2.0.5.zip" dest="[[[sys.cacheDir]]]/UnityAds.framework.zip" />
<unzip source="[[[sys.cacheDir]]]/UnityAds.framework.zip" dest="[[[local.adsfwd]]]" />
<lua><![CDATA[
local iOSProject=require("Tools/export_ios")
iOSProject.addSources({
"AdsUnity.m","AdsUnity.h","UnityAds.framework"
},"GroupAdsFrameworks","ios")
iOSProject.commit()
]]></lua>
</if>
<if condition="[[[plugin.adsFwKiip]]]">
<template name="Kiip" path="[[[local.adsfws]]]" dest="[[[local.adsfwd]]]" include="AdsKiip.*" exclude="*.framework">
<replacelist wildcards="AdsKiip.m">
<replace orig="GIDEROS_KIIP_APP_KEY" by="[[[plugin.adsFwKiipKeyIos]]]"/>
</replacelist>
</template>
<set key="local.adsVer" value="2.3.0" />
<set key="local.adsJarVer" value="Kiip-iOS-SDK-v[[[local.adsVer]]].zip" />
<download source="http://apps.giderosmobile.com/ext/ios/[[[local.adsJarVer]]]" dest="[[[sys.cacheDir]]]/[[[local.adsJarVer]]]" />
<mkdir>KiipSDK</mkdir>
<unzip source="[[[sys.cacheDir]]]/[[[local.adsJarVer]]]" dest="KiipSDK" />
<rmdir>[[[local.adsfwd]]]/KiipSDK.framework</rmdir>
<mv src="KiipSDK/KiipSDK.framework" dst="[[[local.adsfwd]]]/KiipSDK.framework" />"
<rmdir>[[[local.adsfwd]]]/KiipSDKResources.bundle</rmdir>
<mv src="KiipSDK/KiipSDKResources.bundle" dst="[[[local.adsfwd]]]/KiipSDKResources.bundle" />"
<rmdir>KiipSDK</rmdir>
<lua><![CDATA[
local iOSProject=require("Tools/export_ios")
iOSProject.addSources({
"AdsKiip.m","AdsKiip.h","KiipSDK.framework","KiipSDKResources.bundle"
},"GroupAdsFrameworks","ios")
local sysFW={ "AdSupport","PassKit","MediaPlayer","SystemConfiguration","CoreTelephony" }
for _,v in ipairs(sysFW) do
    iOSProject.addFramework(v..".framework","ios","System/Library/Frameworks/"..v..".framework","$SDKROOT")
end
iOSProject.commit()
]]></lua>
</if>
 </target>
 <target name="Html5">
	<if condition="[[[not:[[[project.html5_fbinstant]]]]]]">
 		<lua>local h=require("Tools/export_html5")
 		h.export("Ads")
 		h.exportJS("AdsAdSense")
 		h.exportJS("AdsBase") --Set this last because it must be loaded first
 		</lua>
    </if>
 </target>
 <target name="WinRT">
    <template name="sources" path="[[[sys.pluginDir]]]/source/WinRT"  dest="giderosgame/giderosgame.Shared/Plugins"/>
    <template name="project" path="">
        <replacelist wildcards="giderosgame.Shared.vcxitems;*.vcxproj">
        <append>
            <orig><![CDATA[<!--GIDEROS-PLUGIN-FILES-->]]></orig>
            <by><![CDATA[
    <ClCompile Include="$(MSBuildThisFileDirectory)Plugins\Ads\ads.cpp">
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="$(MSBuildThisFileDirectory)Plugins\Ads\adsbinder.cpp">
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
    </ClCompile>
    <ClCompile Include="$(MSBuildThisFileDirectory)Plugins\Ads\frameworks\AdsPubcenter.cpp" />
    <ClInclude Include="$(MSBuildThisFileDirectory)Plugins\Ads\ads.h" />
    <ClInclude Include="$(MSBuildThisFileDirectory)Plugins\Ads\AdsAbstract.h" />
    <ClInclude Include="$(MSBuildThisFileDirectory)Plugins\Ads\frameworks\AdsPubcenter.h" />]]></by>
            </append>
        <append>
            <orig><![CDATA[<!--SDK-REFERENCE-WIN-->]]></orig>
            <by><![CDATA[
    <SDKReference Include="Microsoft.AdMediatorWindows81, Version=1.0" />]]></by>
         </append>
        <append>
            <orig><![CDATA[<!--SDK-REFERENCE-WINPHONE-->]]></orig>
            <by><![CDATA[
        <SDKReference Include="Microsoft.AdMediator81, Version=1.0" />]]></by>
         </append>
        </replacelist>
    </template>
 </target>
</plugin>
